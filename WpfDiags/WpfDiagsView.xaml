<Window x:Class="AppView.WpfDiagsView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:app="clr-namespace:AppView"
        xmlns:format="clr-namespace:KaosFormat"
        xmlns:issue="clr-namespace:KaosIssue"
        mc:Ignorable="d"
        Title="Filebert" Height="640" Width="640" Style="{DynamicResource darkApp}"
        Loaded="Window_Loaded"
        DataContext="{Binding Path=DiagsPresenter}">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Controls/ThemeDark.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <app:ComparisonConverter x:Key="compConverter"/>
            <app:HashToggle x:Key="hashToggle"/>
            <app:ValidationToggle x:Key="validationToggle"/>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.Resources>
            <Style TargetType="TabControl" BasedOn="{StaticResource darkTabControl}"/>
            <Style TargetType="TextBlock" BasedOn="{StaticResource darkTextBlock}"/>
            <Style TargetType="ListBox" BasedOn="{StaticResource darkListBox}"/>
            <Style TargetType="ListBoxItem" BasedOn="{StaticResource darkListBoxItem}"/>
            <Style TargetType="TextBox" BasedOn="{StaticResource darkTextBox}"/>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <DockPanel Margin="3,3,3,0" Grid.ColumnSpan="3" VerticalAlignment="Top">
                <Label Content="&#x2388;" Margin="-3,-10,-9,-10" VerticalAlignment="Top" AllowDrop="True" FontSize="25"/>
                <Label Content="File _name:" Margin="0,-1,0,0" VerticalAlignment="Center" Target="{Binding ElementName=filePath}" AllowDrop="True"/>
                <TextBox x:Name="filePath" Text="{Binding Path=Root, UpdateSourceTrigger=PropertyChanged}" Width="Auto" HorizontalAlignment="Stretch" DockPanel.Dock="Right" TabIndex="0">
                    <TextBox.Style>
                        <Style TargetType="TextBox" BasedOn="{StaticResource darkTextInputBox}"/>
                    </TextBox.Style>
                </TextBox>
            </DockPanel>
            <Button Content=" Browse..." Grid.Row="0" Grid.Column="3" Command="{Binding DoBrowse}" Margin="6,6,6,3" HorizontalAlignment="Center" VerticalAlignment="Top"/>
            <WrapPanel Grid.Row="1" Grid.RowSpan="4">
                <WrapPanel VerticalAlignment="Top" HorizontalAlignment="Left">
                    <GroupBox Header="Generate" HorizontalAlignment="Left" Margin="3,3,3,3">
                        <WrapPanel>
                            <WrapPanel Orientation="Vertical">
                                <CheckBox Content="Intrinsics" IsChecked="{Binding Path=HashToggle, Converter={StaticResource hashToggle}, ConverterParameter={x:Static format:Hashes.Intrinsic}}"/>
                                <CheckBox Content="File MD5" IsChecked="{Binding Path=HashToggle, Converter={StaticResource hashToggle}, ConverterParameter={x:Static format:Hashes.FileMD5}}"/>
                                <CheckBox Content="File SHA1" IsChecked="{Binding Path=HashToggle, Converter={StaticResource hashToggle}, ConverterParameter={x:Static format:Hashes.FileSHA1}}"/>
                                <CheckBox Content="File SHA256" IsChecked="{Binding Path=HashToggle, Converter={StaticResource hashToggle}, ConverterParameter={x:Static format:Hashes.FileSHA256}}"/>
                            </WrapPanel>
                            <WrapPanel Orientation="Vertical">
                                <CheckBox Content="Meta SHA1" IsChecked="{Binding Path=HashToggle, Converter={StaticResource hashToggle}, ConverterParameter={x:Static format:Hashes.MetaSHA1}}"/>
                                <CheckBox Content="Media SHA1" IsChecked="{Binding Path=HashToggle, Converter={StaticResource hashToggle}, ConverterParameter={x:Static format:Hashes.MediaSHA1}}"/>
                                <CheckBox Content="PCM MD5" IsChecked="{Binding Path=HashToggle, Converter={StaticResource hashToggle}, ConverterParameter={x:Static format:Hashes.PcmMD5}}" ToolTip="for .flac, .wav"/>
                                <CheckBox Content="PCM CRC-32" IsChecked="{Binding Path=HashToggle, Converter={StaticResource hashToggle}, ConverterParameter={x:Static format:Hashes.PcmCRC32}}" ToolTip="for .flac, .wav"/>
                            </WrapPanel>
                        </WrapPanel>
                    </GroupBox>
                </WrapPanel>
                <WrapPanel Grid.Row="1" Grid.RowSpan="3" VerticalAlignment="Top" HorizontalAlignment="Left">
                    <GroupBox Header="Validate" HorizontalAlignment="Left" Margin="3,3,3,3">
                        <WrapPanel>
                            <WrapPanel Orientation="Vertical">
                                <CheckBox Content="Exists" IsChecked="{Binding Path=ValidationToggle, Converter={StaticResource validationToggle}, ConverterParameter={x:Static format:Validations.Exists}}" ToolTip="for .cue, .m3u, .m3u8"/>
                                <CheckBox Content="MD5" IsChecked="{Binding Path=ValidationToggle, Converter={StaticResource validationToggle}, ConverterParameter={x:Static format:Validations.MD5}}" ToolTip="for .md5"/>
                                <CheckBox Content="SHA1" IsChecked="{Binding Path=ValidationToggle, Converter={StaticResource validationToggle}, ConverterParameter={x:Static format:Validations.SHA1}}" ToolTip="for .sha1, .sha1x"/>
                                <CheckBox Content="SHA256" IsChecked="{Binding Path=ValidationToggle, Converter={StaticResource validationToggle}, ConverterParameter={x:Static format:Validations.SHA256}}" ToolTip="for .sha256"/>
                            </WrapPanel>
                        </WrapPanel>
                    </GroupBox>
                </WrapPanel>
                <WrapPanel Grid.Row="1" Grid.RowSpan="3" VerticalAlignment="Top" HorizontalAlignment="Left">
                    <GroupBox Header="EAC rip checks" HorizontalAlignment="Left" Margin="3,3,3,3">
                        <WrapPanel>
                            <WrapPanel Orientation="Vertical">
                                <CheckBox Content="Count MP3s" IsChecked="{Binding Path=IsMp3RipCheckEnabled, Mode=TwoWay}"/>
                                <CheckBox Content="Match FLACs" IsChecked="{Binding Path=IsFlacRipCheckEnabled, Mode=TwoWay}" ToolTip="by CRC-32"/>
                                <CheckBox Content="FLAC tags" IsChecked="{Binding Path=IsFlacTagsCheckEnabled, Mode=TwoWay}"/>
                                <CheckBox Content="Log hash" IsChecked="{Binding Path=IsWebCheckEnabled, Mode=TwoWay}" ToolTip="requires internet connection"/>
                            </WrapPanel>
                        </WrapPanel>
                    </GroupBox>
                </WrapPanel>
                <WrapPanel Orientation="Vertical" Grid.Row="1" Grid.RowSpan="5" VerticalAlignment="Top" HorizontalAlignment="Left">
                    <WrapPanel VerticalAlignment="Top" HorizontalAlignment="Left">
                        <GroupBox Header="Repairs" HorizontalAlignment="Left" Margin="3,3,3,3">
                            <WrapPanel>
                                <WrapPanel Orientation="Vertical">
                                    <CheckBox Content="Enable" IsChecked="{Binding Path=IsRepairEnabled, Mode=TwoWay}" ToolTip="requires file locks"/>
                                </WrapPanel>
                            </WrapPanel>
                        </GroupBox>
                    </WrapPanel>
                    <WrapPanel VerticalAlignment="Top" HorizontalAlignment="Left">
                        <GroupBox Header="Escalate" HorizontalAlignment="Left" Margin="3,0,3,3">
                            <WrapPanel>
                                <WrapPanel Orientation="Vertical">
                                    <CheckBox Content="Fussy" IsChecked="{Binding Path=IsFussy, Mode=TwoWay}" ToolTip="increases issue severities"/>
                                </WrapPanel>
                            </WrapPanel>
                        </GroupBox>
                    </WrapPanel>
                </WrapPanel>
            </WrapPanel>
            <Button Content=" Check " Grid.Row="1" Grid.Column="3" Grid.RowSpan="3" Command="{Binding DoParse}" IsDefault="True" Margin="6,3,6,0" HorizontalAlignment="Center" VerticalAlignment="Top">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="IsEnabled" Value="true"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsBusy}" Value="true">
                                <Setter Property="IsEnabled" Value="false"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <StackPanel Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="2" Orientation="Horizontal" VerticalAlignment="Top">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TabIsFormat}" Value="false">
                                <Setter Property="IsEnabled" Value="false"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <Button Content="|&lt;" Command="{Binding NavFirst}" Margin="6,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                <Button Content="&lt;" Command="{Binding NavPrev}" Margin="3,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                <Button Content="&gt;" Command="{Binding NavNext}" Margin="3,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                <Button Content="&gt;|" Command="{Binding NavLast}" Margin="3,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                <TextBlock Text="{Binding Path=CurrentTabText}"/>
            </StackPanel>
            <StackPanel Grid.Row="3" Grid.Column="2" Grid.ColumnSpan="2" Orientation="Horizontal">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TabHasErrors}" Value="false">
                                <Setter Property="IsEnabled" Value="false"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <Button Content="|&lt;" Command="{Binding NavFirstError}" Margin="6,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                <Button Content="&lt;" Command="{Binding NavPrevError}" Margin="3,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                <Button Content="&gt;" Command="{Binding NavNextError}" Margin="3,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                <Button Content="&gt;|" Command="{Binding NavLastError}" Margin="3,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                <TextBlock Text="{Binding Path=TabErrorText}"/>
            </StackPanel>
            <StackPanel Grid.Row="4" Grid.Column="2" Grid.ColumnSpan="2" Orientation="Horizontal">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TabHasRepairables}" Value="false">
                                <Setter Property="IsEnabled" Value="false"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <Button Content="|&lt;" Command="{Binding NavFirstRepair}" Margin="6,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                <Button Content="&lt;" Command="{Binding NavPrevRepair}" Margin="3,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                <Button Content="&gt;" Command="{Binding NavNextRepair}" Margin="3,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                <Button Content="&gt;|" Command="{Binding NavLastRepair}" Margin="3,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                <TextBlock Text="{Binding Path=TabRepairablesText}"/>
            </StackPanel>
        </Grid>
        <TabControl x:Name="infoTabs" Grid.Row="1" VerticalContentAlignment="Stretch" SelectedIndex="{Binding CurrentTabNumber}">
            <TabItem Header="Console">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="3"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <DockPanel Grid.ColumnSpan="2">
                        <StackPanel>
                            <Label Content="Report" Margin="6,6,0,0"/>
                            <RadioButton Content="Quiet" Margin="3,0,0,0" IsChecked="{Binding Path=Scope, Converter={StaticResource compConverter}, ConverterParameter={x:Static issue:Granularity.Quiet}}" ToolTip="errors only"/>
                            <RadioButton Content="Terse" Margin="3,0,0,0" IsChecked="{Binding Path=Scope, Converter={StaticResource compConverter}, ConverterParameter={x:Static issue:Granularity.Terse}}" ToolTip="warnings and errors only"/>
                            <RadioButton Content="Lucid" Margin="3,0,0,0" IsChecked="{Binding Path=Scope, Converter={StaticResource compConverter}, ConverterParameter={x:Static issue:Granularity.Lucid}}" ToolTip="includes advisories"/>
                            <RadioButton Content="Verbose" Margin="3,0,0,0" IsChecked="{Binding Path=Scope, Converter={StaticResource compConverter}, ConverterParameter={x:Static issue:Granularity.Verbose}}" ToolTip="getting noisey"/>
                            <RadioButton Content="Detail" Margin="3,0,0,0" IsChecked="{Binding Path=Scope, Converter={StaticResource compConverter}, ConverterParameter={x:Static issue:Granularity.Detail}}" ToolTip="walls of text"/>
                            <Label Content="Zoom" Margin="0,6,0,0" HorizontalAlignment="Center"/>
                            <StackPanel Orientation="Horizontal">
                                <Button Content=" - " Command="{Binding DoConsoleZoomMinus}" Margin="6,3,3,6" HorizontalAlignment="Center" FontFamily="Lucida Console"/>
                                <Button Content=" + " Command="{Binding DoConsoleZoomPlus}" Margin="3,3,6,6" HorizontalAlignment="Center" FontFamily="Lucida Console"/>
                            </StackPanel>
                            <Button Content=" Clear " Margin="6,6,6,6" Command="{Binding DoConsoleClear}"/>
                        </StackPanel>
                        <GroupBox Header="Output">
                            <TextBox x:Name="consoleBox">
                                <TextBox.Style>
                                    <Style TargetType="TextBox">
                                        <Setter Property="FontFamily" Value="Lucida Console"/>
                                        <Setter Property="FontSize" Value="10"/>
                                        <Setter Property="Foreground" Value="Cyan"/>
                                        <Setter Property="Background" Value="Black"/>
                                        <Setter Property="IsReadOnly" Value="True"/>
                                        <Setter Property="IsTabStop" Value="False"/>
                                        <Setter Property="Focusable" Value="True"/>
                                        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </GroupBox>
                    </DockPanel>
                    <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch"/>
                    <TextBlock Text="{Binding Progress}" Grid.Row="2" Grid.ColumnSpan="2"/>
                </Grid>
            </TabItem>
            <TabItem Header=".avi" Grid.IsSharedSizeScope="True">
                <TabItem.Style>
                    <Style TargetType="TabItem">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TabAvi.Current}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TabAvi.HasError}" Value="true">
                                <Setter Property="Foreground" Value="DarkRed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TabItem.Style>
                <app:AviControl/>
            </TabItem>
            <TabItem Header=".cue" Grid.IsSharedSizeScope="True">
                <TabItem.Style>
                    <Style TargetType="TabItem">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TabCue.Current}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TabCue.HasError}" Value="true">
                                <Setter Property="Foreground" Value="DarkRed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TabItem.Style>
                <app:CueControl/>
            </TabItem>
            <TabItem Header=".flac" Grid.IsSharedSizeScope="True">
                <TabItem.Style>
                    <Style TargetType="TabItem">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TabFlac.Current}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TabFlac.HasError}" Value="true">
                                <Setter Property="Foreground" Value="DarkRed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TabItem.Style>
                <app:FlacControl/>
            </TabItem>
            <TabItem Header=".jpg" Grid.IsSharedSizeScope="True">
                <TabItem.Style>
                    <Style TargetType="TabItem">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TabJpg.Current}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TabJpg.HasError}" Value="true">
                                <Setter Property="Foreground" Value="DarkRed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TabItem.Style>
                <app:JpgControl/>
            </TabItem>
            <TabItem Header=".log (EAC)" Width="76" Grid.IsSharedSizeScope="True">
                <TabItem.Style>
                    <Style TargetType="TabItem">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TabLogEac.Current}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TabLogEac.HasError}" Value="true">
                                <Setter Property="Foreground" Value="DarkRed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TabItem.Style>
                <app:LogEacControl/>
            </TabItem>
            <TabItem Header=".m3u">
                <TabItem.Style>
                    <Style TargetType="TabItem">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TabM3u.Current}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TabM3u.HasError}" Value="true">
                                <Setter Property="Foreground" Value="DarkRed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TabItem.Style>
                <app:M3uControl/>
            </TabItem>
            <TabItem Header=".m3u8">
                <TabItem.Style>
                    <Style TargetType="TabItem">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TabM3u8.Current}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TabM3u8.HasError}" Value="true">
                                <Setter Property="Foreground" Value="DarkRed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TabItem.Style>
                <app:M3u8Control/>
            </TabItem>
            <TabItem Header=".md5">
                <TabItem.Style>
                    <Style TargetType="TabItem">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TabMd5.Current}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TabMd5.HasError}" Value="true">
                                <Setter Property="Foreground" Value="DarkRed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TabItem.Style>
                <app:Md5Control/>
            </TabItem>
            <TabItem Header=".mkv" Grid.IsSharedSizeScope="True">
                <TabItem.Style>
                    <Style TargetType="TabItem">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TabMkv.Current}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TabMkv.HasError}" Value="true">
                                <Setter Property="Foreground" Value="DarkRed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TabItem.Style>
                <app:MkvControl/>
            </TabItem>
            <TabItem Header=".mp3" Grid.IsSharedSizeScope="True">
                <TabItem.Style>
                    <Style TargetType="TabItem">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TabMp3.Current}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TabMp3.HasError}" Value="true">
                                <Setter Property="Foreground" Value="DarkRed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TabItem.Style>
                <app:Mp3Control/>
            </TabItem>
            <TabItem Header=".mp4" Grid.IsSharedSizeScope="True">
                <TabItem.Style>
                    <Style TargetType="TabItem">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TabMp4.Current}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TabMp4.HasError}" Value="true">
                                <Setter Property="Foreground" Value="DarkRed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TabItem.Style>
                <app:Mp4Control/>
            </TabItem>
            <TabItem Header=".mpg" Grid.IsSharedSizeScope="True">
                <TabItem.Style>
                    <Style TargetType="TabItem">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TabMpg.Current}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TabMpg.HasError}" Value="true">
                                <Setter Property="Foreground" Value="DarkRed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TabItem.Style>
                <app:MpgControl/>
            </TabItem>
            <TabItem Header=".ogg" Grid.IsSharedSizeScope="True">
                <TabItem.Style>
                    <Style TargetType="TabItem">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TabOgg.Current}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TabOgg.HasError}" Value="true">
                                <Setter Property="Foreground" Value="DarkRed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TabItem.Style>
                <app:OggControl/>
            </TabItem>
            <TabItem Header=".png" Grid.IsSharedSizeScope="True">
                <TabItem.Style>
                    <Style TargetType="TabItem">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TabPng.Current}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TabPng.HasError}" Value="true">
                                <Setter Property="Foreground" Value="DarkRed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TabItem.Style>
                <app:PngControl/>
            </TabItem>
            <TabItem Header=".sha1">
                <TabItem.Style>
                    <Style TargetType="TabItem">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TabSha1.Current}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TabSha1.HasError}" Value="true">
                                <Setter Property="Foreground" Value="DarkRed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TabItem.Style>
                <app:Sha1Control/>
            </TabItem>
            <TabItem Header=".sha1x">
                <TabItem.Style>
                    <Style TargetType="TabItem">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TabSha1x.Current}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TabSha1x.HasError}" Value="true">
                                <Setter Property="Foreground" Value="DarkRed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TabItem.Style>
                <app:Sha1xControl/>
            </TabItem>
            <TabItem Header=".sha256">
                <TabItem.Style>
                    <Style TargetType="TabItem">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TabSha256.Current}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TabSha256.HasError}" Value="true">
                                <Setter Property="Foreground" Value="DarkRed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TabItem.Style>
                <app:Sha256Control/>
            </TabItem>
            <TabItem Header=".wav" Grid.IsSharedSizeScope="True">
                <TabItem.Style>
                    <Style TargetType="TabItem">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TabWav.Current}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TabWav.HasError}" Value="true">
                                <Setter Property="Foreground" Value="DarkRed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TabItem.Style>
                <app:WavControl/>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
